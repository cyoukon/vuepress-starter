import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,f as s,o as a}from"./app-dX-INNG3.js";const l={};function n(o,t){return a(),r("div",null,t[0]||(t[0]=[s('<p><strong><a href="https://redis.com.cn/tutorial.html" target="_blank" rel="noopener noreferrer">Redis中文教程</a></strong></p><h1 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h1><p>Redis 是一个开源（BSD许可）的，内存中的数据结构存储系统，它可以用作数据库、缓存和消息中间件。 它支持多种类型的数据结构，如 <a href="http://www.redis.cn/topics/data-types-intro.html#strings" target="_blank" rel="noopener noreferrer">字符串（strings）</a>， <a href="http://www.redis.cn/topics/data-types-intro.html#hashes" target="_blank" rel="noopener noreferrer">散列（hashes）</a>， <a href="http://www.redis.cn/topics/data-types-intro.html#lists" target="_blank" rel="noopener noreferrer">列表（lists）</a>， <a href="http://www.redis.cn/topics/data-types-intro.html#sets" target="_blank" rel="noopener noreferrer">集合（sets）</a>， <a href="http://www.redis.cn/topics/data-types-intro.html#sorted-sets" target="_blank" rel="noopener noreferrer">有序集合（sorted sets）</a> 与范围查询， <a href="http://www.redis.cn/topics/data-types-intro.html#bitmaps" target="_blank" rel="noopener noreferrer">bitmaps</a>， <a href="http://www.redis.cn/topics/data-types-intro.html#hyperloglogs" target="_blank" rel="noopener noreferrer">hyperloglogs</a> 和 <a href="http://www.redis.cn/commands/geoadd.html" target="_blank" rel="noopener noreferrer">地理空间（geospatial）</a> 索引半径查询。 Redis 内置了 <a href="http://www.redis.cn/topics/replication.html" target="_blank" rel="noopener noreferrer">复制（replication）</a>，<a href="http://www.redis.cn/commands/eval.html" target="_blank" rel="noopener noreferrer">LUA脚本（Lua scripting）</a>， <a href="http://www.redis.cn/topics/lru-cache.html" target="_blank" rel="noopener noreferrer">LRU驱动事件（LRU eviction）</a>，<a href="http://www.redis.cn/topics/transactions.html" target="_blank" rel="noopener noreferrer">事务（transactions）</a> 和不同级别的 <a href="http://www.redis.cn/topics/persistence.html" target="_blank" rel="noopener noreferrer">磁盘持久化（persistence）</a>， 并通过 <a href="http://www.redis.cn/topics/sentinel.html" target="_blank" rel="noopener noreferrer">Redis哨兵（Sentinel）</a>和自动 <a href="http://www.redis.cn/topics/cluster-tutorial.html" target="_blank" rel="noopener noreferrer">分区（Cluster）</a>提供高可用性（high availability）。</p><h1 id="redis-数据类型介绍" tabindex="-1"><a class="header-anchor" href="#redis-数据类型介绍"><span>Redis 数据类型介绍</span></a></h1><table><thead><tr><th style="text-align:left;">类型</th><th style="text-align:left;">简介</th><th style="text-align:left;">特性</th><th style="text-align:left;">场景</th></tr></thead><tbody><tr><td style="text-align:left;">字符串（string）</td><td style="text-align:left;">二进制安全</td><td style="text-align:left;">可以包含任何数据,比如jpg图片或者序列化的对象,一个键最大能存储512M</td><td style="text-align:left;">---</td></tr><tr><td style="text-align:left;">哈希（hash）</td><td style="text-align:left;">键值对集合,即编程语言中的Map类型</td><td style="text-align:left;">适合存储对象,并且可以像数据库中update一个属性一样只修改某一项属性值</td><td style="text-align:left;">存储、读取、修改用户属性</td></tr><tr><td style="text-align:left;">列表（list）</td><td style="text-align:left;">链表(双向链表)</td><td style="text-align:left;">增删快,提供了操作某一段元素的API</td><td style="text-align:left;">1,最新消息排行等功能(比如朋友圈的时间线) 2,消息队列</td></tr><tr><td style="text-align:left;">集合（set）</td><td style="text-align:left;">哈希表实现,元素不重复</td><td style="text-align:left;">1、添加、删除,查找的复杂度都是O(1) 2、为集合提供了求交集、并集、差集等操作</td><td style="text-align:left;">1、共同好友 2、利用唯一性,统计访问网站的所有独立ip 3、好友推荐时,根据tag求交集,大于某个阈值就可以推荐</td></tr><tr><td style="text-align:left;">有序集合（sorted set）</td><td style="text-align:left;">将Set中的元素增加一个权重参数score,元素按score有序排列</td><td style="text-align:left;">数据插入集合时,已经进行天然排序</td><td style="text-align:left;">1、排行榜 2、带权重的消息队列</td></tr><tr><td style="text-align:left;">位图 ( Bitmaps )</td><td style="text-align:left;">是一串连续的二进制数组（0和1），可以通过偏移量（offset）定位元素</td><td style="text-align:left;">存储上限为<code>2^32 </code>，即512M</td><td style="text-align:left;">用户签到记录，如用<code>11010101</code>表示用户10天内的签到情况</td></tr><tr><td style="text-align:left;">streams</td><td style="text-align:left;">5.0 推出的数据类型</td><td style="text-align:left;">支持多播的可持久化的消息队列，用于实现发布订阅功能</td><td style="text-align:left;">轻量级消息队列，但它有个缺点就是消息无法持久化，如果出现网络断开、Redis 宕机等，消息就会被丢弃。</td></tr></tbody></table>',5)]))}const p=e(l,[["render",n],["__file","Redis基本概念.html.vue"]]),h=JSON.parse('{"path":"/guide/Redis/Redis%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html","title":"简介","lang":"zh-CN","frontmatter":{"description":"Redis中文教程 简介 Redis 是一个开源（BSD许可）的，内存中的数据结构存储系统，它可以用作数据库、缓存和消息中间件。 它支持多种类型的数据结构，如 字符串（strings）， 散列（hashes）， 列表（lists）， 集合（sets）， 有序集合（sorted sets） 与范围查询， bitmaps， hyperloglogs 和 地...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/vuepress-starter/guide/Redis/Redis%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"简介"}],["meta",{"property":"og:description","content":"Redis中文教程 简介 Redis 是一个开源（BSD许可）的，内存中的数据结构存储系统，它可以用作数据库、缓存和消息中间件。 它支持多种类型的数据结构，如 字符串（strings）， 散列（hashes）， 列表（lists）， 集合（sets）， 有序集合（sorted sets） 与范围查询， bitmaps， hyperloglogs 和 地..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-10T08:55:51.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-10T08:55:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"简介\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-10T08:55:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1733820951000,"updatedTime":1733820951000,"contributors":[{"name":"cyoukon","username":"cyoukon","email":"z1162289133@gmail.com","commits":1,"url":"https://github.com/cyoukon"}]},"readingTime":{"minutes":2.16,"words":649},"filePathRelative":"guide/Redis/Redis基本概念.md","localizedDate":"2024年12月10日","autoDesc":true}');export{p as comp,h as data};
